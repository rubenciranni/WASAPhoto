openapi: '3.0.2'
info:
  title: WASAPhoto Backend API
  version: '1.0'

security:
  - bearerAuth: []

paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user 
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody: { $ref: "#/components/requestBodies/DoLogin" }
      security: []
      responses:
        '201': { $ref: "#/components/responses/SuccessfulDoLogin" }
        '500': { $ref: "#/components/responses/InternalServerError" }

components:
  schemas:
    # Fields
    username:
      description: Username associated with a unique user.
      type: string
      example: Maria
      pattern: 'Ë†.*?$' 
      minLength: 3
      maxLength: 16
    userId:
      description: UUID associated with a unique user.
      type: string
      format: uuid
    # Objects
  requestBodies:
    DoLogin:
      description: User details.
      content:
        application/json:
          schema:
            type: object
            properties:
              username: { $ref: "#/components/schemas/username"}
      required: true
  responses:
    InternalServerError:
      description: Unexpected condition was encountered.
    SuccessfulDoLogin:
      description: User log-in action successful.
      content:
        application/json:
          schema:
            type: object
            properties:
              identifier: { $ref: "#/components/schemas/userId" }
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: uuid
